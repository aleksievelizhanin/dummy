name: Pull, Tag & Selenide Test

on:
  workflow_dispatch:            # manual trigger
  # push: [ "main" ]            # or on every push

jobs:
  pull_tag_test:
    runs-on: ubuntu-latest

    steps:
      ########################################################
      # 1) one Dock­er work: log in, pull, tag, start container  #
      ########################################################
      - uses: actions/checkout@v4

      # after `actions/checkout@v4`
      - name: Build Express service image
        run: |
          docker build -t my-service-image:latest .

      - name: Run service container
        run: |
          set -euo pipefail
          docker run -d --name myservice -p 8080:8080 my-service-image:latest
      
          echo "⏳ Waiting for service on http://myservice:8080/action ..."
          for i in {1..30}; do
            if curl -fs http://myservice:8080/action >/dev/null; then
              echo "✅ Service is up!"
              break
            fi
            sleep 1
          done

      - name: Show container status & logs if it exits

        run: |
          sleep 2
          if [ "$(docker inspect -f '{{.State.Running}}' myservice)" = "false" ]; then
            echo "Container exited prematurely:"
            docker logs myservice
            exit 1
          else
            echo "Container is running"
            docker logs myservice
          fi



      #####################################
      # 2) Java + Maven + Selenide tests  #
      #####################################
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run Selenide smoke-test (headless Chrome)
        env:
          SELENIDE_BROWSER: chrome         # picked up by the test
          SELENIDE_HEADLESS: true
          TARGET_URL: http://0.0.0.0:8080/action
        run: mvn -B test
